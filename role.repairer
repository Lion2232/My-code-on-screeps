//not used currently because not working
var roleRepairer = {

    /** @param {Creep} creep **/
    run: function(creep) {
        if (creep.ticksToLive < 100) {
            creep.moveTo(20, 45);
            Game.spawns['Spawn1'].renewCreep(creep);
        }
	    if(creep.memory.repairing && creep.store[RESOURCE_ENERGY] == 0) {
            creep.memory.repairing = false;
            creep.say('ðŸ”„ harvest');
	    }
	    if(!creep.memory.repairing && creep.store.getFreeCapacity() == 0) {
	        creep.memory.repairing = true;
	        creep.say('ðŸš§ repair');
	    }

	    if(creep.memory.repairing) {
	        var closestDamagedStructure = creep.pos.findClosestByRange(FIND_STRUCTURES, {
            filter: (structure) => structure.hits < structure.hitsMax
            });
            if(closestDamagedStructure) {
               creep.repair(closestDamagedStructure);
            }
	    }
	    else {
	        var droppedresources = creep.pos.findClosestByRange(FIND_DROPPED_RESOURCES,
            {
                filter: (res) =>
                {
                    return (res.resourceType != RESOURCE_ENERGY);
                }
            });
            if (droppedresources != undefined)
            {
                var range = creep.pos.getRangeTo(droppedresources);
                if (range <= 1)
                {
                    creep.pickup(droppedresources);
                }
                else
                {
                    creep.moveTo(droppedresources,
                    {
                        reusePath: range,
                        visualizePathStyle:
                        {
                            stroke: '#ffaa00'
                        }
                    });
                }
            }
	    }
	}
};

module.exports = roleRepairer;
